import argparse
import os
from src.app import RAGPipeline


def parse_args():
    """Ph√¢n t√≠ch tham s·ªë d√≤ng l·ªánh"""
    parser = argparse.ArgumentParser(description="RAG Pipeline cho c∆° s·ªü d·ªØ li·ªáu")

    subparsers = parser.add_subparsers(dest="command", help="L·ªánh c·∫ßn th·ª±c hi·ªán")

    # L·ªánh index
    index_parser = subparsers.add_parser("index", help="Index d·ªØ li·ªáu")
    index_parser.add_argument(
        "--data-dir", type=str, required=True, help="ƒê∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c ch·ª©a d·ªØ li·ªáu"
    )

    # L·ªánh query
    query_parser = subparsers.add_parser("query", help="Truy v·∫•n d·ªØ li·ªáu")
    query_parser.add_argument("--query", type=str, help="C√¢u truy v·∫•n")

    # L·ªánh delete-index
    delete_parser = subparsers.add_parser("delete-index", help="X√≥a to√†n b·ªô index")
    delete_parser.add_argument(
        "--collection",
        type=str,
        help="T√™n collection c·∫ßn x√≥a (m·∫∑c ƒë·ªãnh l√† c·∫•u h√¨nh trong config.py)",
    )

    return parser.parse_args()


def main():
    """H√†m main c·ªßa ·ª©ng d·ª•ng"""
    args = parse_args()

    # Kh·ªüi t·∫°o pipeline
    pipeline = RAGPipeline()

    if args.command == "index":
        # Ki·ªÉm tra th∆∞ m·ª•c d·ªØ li·ªáu
        if not os.path.exists(args.data_dir):
            print(f"‚ùå Th∆∞ m·ª•c d·ªØ li·ªáu kh√¥ng t·ªìn t·∫°i: {args.data_dir}")
            return

        # Th·ª±c hi·ªán indexing
        pipeline.index_data(args.data_dir)

    elif args.command == "query":
        # N·∫øu kh√¥ng c√≥ tham s·ªë --query, y√™u c·∫ßu nh·∫≠p
        query = args.query
        if not query:
            query = input("Nh·∫≠p c√¢u truy v·∫•n c·ªßa b·∫°n: ")

        # Th·ª±c hi·ªán truy v·∫•n
        response = pipeline.query(query)

        # In k·∫øt qu·∫£
        print("\nüí¨ K·∫øt qu·∫£:")
        print(response)

    elif args.command == "delete-index":
        # X√≥a index
        collection_name = args.collection
        # X√°c nh·∫≠n t·ª´ ng∆∞·ªùi d√πng
        confirm = input(f"B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a to√†n b·ªô index? (y/n): ")
        if confirm.lower() == "y":
            try:
                pipeline.delete_index(collection_name)
                print("‚úÖ ƒê√£ x√≥a index th√†nh c√¥ng.")
                # Th√¥ng b√°o v·ªÅ vi·ªác kh·ªüi ƒë·ªông l·∫°i ·ª©ng d·ª•ng
                print(
                    "‚ö†Ô∏è ƒê·ªÉ ƒë·∫£m b·∫£o h·ªá th·ªëng ho·∫°t ƒë·ªông ƒë√∫ng sau khi x√≥a index, vui l√≤ng kh·ªüi ƒë·ªông l·∫°i ·ª©ng d·ª•ng tr∆∞·ªõc khi s·ª≠ d·ª•ng l·ªánh query."
                )
            except Exception as e:
                print(f"‚ùå L·ªói khi x√≥a index: {str(e)}")
        else:
            print("‚ùå ƒê√£ h·ªßy thao t√°c x√≥a index.")

    else:
        print("‚ùå Vui l√≤ng ch·ªçn l·ªánh 'index', 'query' ho·∫∑c 'delete-index'")
        print("V√≠ d·ª•: python -m src.main index --data-dir ./data")
        print("V√≠ d·ª•: python -m src.main query --query 'C√¢u l·ªánh thao t√°c d·ªØ li·ªáu?'")
        print("V√≠ d·ª•: python -m src.main delete-index")


if __name__ == "__main__":
    main()
