# Multi-stage build cho Frontend (Next.js) - Tối ưu cho CI/CD
FROM node:20-alpine AS base

# Install pnpm
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

# Dependencies stage - QUAN TRỌNG: Chỉ copy package files trước
FROM base AS deps
WORKDIR /app

# Copy ONLY package files để tận dụng Docker layer cache
COPY src/frontend/package.json src/frontend/pnpm-lock.yaml* ./

# Cài dependencies với cache tối ưu - layer này chỉ rebuild khi package.json thay đổi
RUN pnpm config set auto-install-peers true && \
    pnpm config set network-timeout 600000 && \
    pnpm config set store-dir /pnpm-store && \
    pnpm install --frozen-lockfile --prefer-offline || \
    pnpm install --no-frozen-lockfile

# Build stage
FROM base AS builder
WORKDIR /app

# Copy dependencies từ stage trước
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/package.json ./package.json

# Copy source code sau cùng (thay đổi thường xuyên nhất)
COPY src/frontend/ .

# Đối số để nhận file env và API URL từ CI/CD
ARG ENV_FILE=.env.frontend
ARG NEXT_PUBLIC_API_URL

# Copy file env từ build context
COPY ${ENV_FILE} ./.env.local

# Thiết lập biến môi trường cho build
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_PRIVATE_LOCAL_WEBPACK=true

# Debug info (có thể bỏ trong production)
RUN echo "Building with NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}"

# Build application
RUN pnpm run build

# Production stage - nhỏ gọn cho deployment
FROM node:20-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production

# Install wget cho health checks
RUN apk add --no-cache wget

# Tạo user non-root cho security
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy built application từ builder stage
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1

CMD ["node", "server.js"]
